
services:
  pgdb:
    image: postgres
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    container_name: pgdb
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"

  django:
    build:
      context: .
    container_name: django
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - RIOT_API_KEY=${RIOT_API_KEY}
      - DJANGO_ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    depends_on:
      - pgdb
      - redis


  redis:
    image: "redis:alpine"

  celery:
    build: .
    command: celery -A AramGoV2 worker --loglevel=info
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER_URL=${BROKER_URL}
      - CELERY_RESULT_BACKEND=${BROKER_BACKEND}
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    depends_on:
      - pgdb
      - redis

  proxy:
    build: ./proxy
    restart: always
    depends_on:
      - django
    ports:
      - 80:8000
    volumes:
      - static-data:/vol/static

volumes:
  postgres-data:
  static-data: