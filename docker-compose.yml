services:
  pgdb:
    image: postgres
    container_name: pgdb
    environment:
      - POSTGRES_DB=AramGo
      - POSTGRES_USER=steven
      - POSTGRES_PASSWORD=steven2020
    volumes:
      - pgdata:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  redis:
    image: "redis:alpine"
    expose:
      - 6379

  django:
    build: .
    container_name: django
    command: >
      /bin/sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py makemigrations &&
              python manage.py populate_assets &&
              python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
      - ./web:/vol/web
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - RIOT_API_KEY=${RIOT_API_KEY}
      - DJANGO_ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER_URL=${BROKER_URL}
      - CELERY_RESULT_BACKEND=${BACKEND_URL}
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    depends_on:
      - pgdb
      - redis

  celery:
    build: .
    command: celery -A AramGoV2 worker --loglevel=info
    volumes:
      - .:/code
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - RIOT_API_KEY=${RIOT_API_KEY}
      - DJANGO_ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER_URL=${BROKER_URL}
      - CELERY_RESULT_BACKEND=${BACKEND_URL}
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    depends_on:
      - pgdb
      - redis

volumes:
  pgdata:
